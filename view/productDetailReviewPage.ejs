
<%- include('header') -%>


<!-- navbar -->

<%- include('navbar') -%>


<div class="container ">
 
    <div class="card border-warning fonts ">
        <div class="container-fliud  mt-5">
            <div class="wrapper row ">
                <div class="preview col-md-6">
                  <div class="preview-pic tab-content">
                    <div class="tab-pane active" id="pic-1">
                        <img src="../uploads/<%= products.image[0] %>" class="img-fluid" style="width: 35vw; height: 55vh;" />
                    </div>
                 
                </div>
                <ul class="preview-thumbnail nav nav-tabs">
                  <% for (let i = 1; i <= products.image.length; i++) { %>
                      <li class="<%= i === 1 ? 'active' : '' %>">
                          <a data-target="#pic-<%= i %>" data-toggle="tab"  id="imageContainer">
                              <img src="../uploads/<%= products.image[i] %>" class="img-fluid zoom-image" style="width: 25vw; height: 17vh;"  id="productImage" />
                          </a>
                      </li>
                  <% } %>
              </ul>
              
                
                    
                </div>
                <div class="details col-md-6">
                    <h3 class="product-title"><%= products.name %></h3>
                   
                    <p class="product-description"><%= products.description %></p>
                    <% if (products.discount !== 0) { %>
                      <h4 class="price">
                          current price: <span style="text-decoration: line-through;">₹<%= products.price %></span>
                            <span style="font-size: 1.2em;">₹<%= products.discount %></span>
                      </h4>
                  <% } else { %>
                      <h4 class="price">current price: <span>₹<%= products.price %></span></h4>
                  <% } %>
                  
                    <h5 class="colors">Category:
                        <span class="colors green"><%= products.category %></span>
                  
                    </h5>

                    <form action="/addReview" method="POST" class="review-form" id="reviewForm">
                      <label for="review">Rating:</label>
                      <div class="rating star">
                          <input type="radio" id="star1" name="rating" value="1" required />
                          <label class="star" for="star1"></label>
                  
                          <input type="radio" id="star2" name="rating" value="2" />
                          <label class="star" for="star2"></label>
                  
                          <input type="radio" id="star3" name="rating" value="3" />
                          <label class="star" for="star3"></label>
                  
                          <input type="radio" id="star4" name="rating" value="4" />
                          <label class="star" for="star4"></label>
                  
                          <input type="radio" id="star5" name="rating" value="5" />
                          <label class="star" for="star5"></label>
                      </div>
                  
                      <label for="review">Review:</label>
                      <textarea name="review" rows="4" required></textarea>
                  
                      <input type="hidden" name="productId" value="<%= products._id %>">
                  
                      <button type="submit" class="submit-button"  >Submit Review</button>
                  </form>
                  
                  

                    <div class="action"><a href="/viewcart">
                      <button class="add-to-cart btn btn-default" type="button">ViewCart</button></a>
                      <button class="like btn btn-default" type="button"><span class="fa fa-heart"></span></button>
                  </div>

                </div>
            </div>
        </div>
    </div>
 
</div>




<!-- ... (your existing HTML code) ... -->

<div class="container mt-4">
  <h5 class="rating-title">Reviews:</h5>
  <% if (products.reviews && products.reviews.length > 0) { %>
      <table class="table">
          <thead>
              <tr class="fonts">
                  <th>Username</th>
                  <th>Review</th>
                  <th>Rating</th>
              </tr>
          </thead>
          <tbody id="reviews-list">
            <% if (products.rating || (products.reviews && products.reviews.length > 0)) { %>
              <% products.reviews.forEach(function (review) { %>
                <tr class="fonts">
                  <td><%= review.username %></td>
                  <td><%= review.review %></td>
                  <td>
                    <% for (let i = 0; i < review.rating; i++) { %>
                      ⭐
                    <% } %>
                  </td>
                </tr>
              <% }); %>
            <% } else { %>
              <tr>
                <td colspan="3">No reviews available for this product.</td>
              </tr>
            <% } %>
          </tbody>
      </table>
  <% } else { %>
      <p>No reviews available.</p>
  <% } %>
</div>


<!-- ... (your existing HTML code) ... -->


<style>
    .preview {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -webkit-flex-direction: column;
      -ms-flex-direction: column;
          flex-direction: column; }
  @media screen and (max-width: 996px) {
    .preview {
      margin-bottom: 20px; } }

.preview-pic {
  -webkit-box-flex: 1;
  -webkit-flex-grow: 1;
      -ms-flex-positive: 1;
          flex-grow: 1; }

.preview-thumbnail.nav-tabs {
  border: none;
  margin-top: 15px; }
  .preview-thumbnail.nav-tabs li {
    width: 18%;
    margin-right: 2.5%; }
    .preview-thumbnail.nav-tabs li img {
      max-width: 100%;
      display: block; }
    .preview-thumbnail.nav-tabs li a {
      padding: 0;
      margin: 0; }
    .preview-thumbnail.nav-tabs li:last-of-type {
      margin-right: 0; }

.tab-content {
  overflow: hidden; }
  .tab-content img {
    width: 100%;
    -webkit-animation-name: opacity;
            animation-name: opacity;
    -webkit-animation-duration: .3s;
            animation-duration: .3s; }

.card {
  margin-top: 50px;
  background: #eee;
  padding: 3em;
  line-height: 1.5em; }

@media screen and (min-width: 997px) {
  .wrapper {
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex; } }

.details {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -webkit-flex-direction: column;
      -ms-flex-direction: column;
          flex-direction: column; }

.colors {
 
  -webkit-box-flex: 1;
  -webkit-flex-grow: 1;
      -ms-flex-positive: 1;
          flex-grow: 1; }

.product-title, .price, .sizes, .colors {
  text-transform: UPPERCASE;
  font-weight: bold; }

.checked, .price span {
  color: #ff9f1a; }

.product-title, .rating, .product-description, .price, .vote, .sizes {
  margin-bottom: 15px; }

.product-title {
  margin-top: 0; }

.size {
  margin-right: 10px; }
  .size:first-of-type {
    margin-left: 40px; }

.color {
  display: inline-block;
  vertical-align: middle;
  margin-right: 10px;
  height: 2em;
  width: 2em;
  border-radius: 2px; }
  .color:first-of-type {
    margin-left: 20px; }

.add-to-cart, .like {
  background: #ff9f1a;
  padding: 1.2em 1.5em;
  border: none;
  text-transform: UPPERCASE;
  font-weight: bold;
  color: #fff;
  -webkit-transition: background .3s ease;
          transition: background .3s ease; }
  .add-to-cart:hover, .like:hover {
    background: #b36800;
    color: #fff; }

.not-available {
  text-align: center;
  line-height: 2em; }
  .not-available:before {
    font-family: fontawesome;
    content: "\f00d";
    color: #fff; }

.orange {
  background: #ff9f1a; }

.green {
  background: #85ad00; }

.blue {
  background: #0076ad; }

.tooltip-inner {
  padding: 1.3em; }

@-webkit-keyframes opacity {
  0% {
    opacity: 0;
    -webkit-transform: scale(3);
            transform: scale(3); }
  100% {
    opacity: 1;
    -webkit-transform: scale(1);
            transform: scale(1); } }

@keyframes opacity {
  0% {
    opacity: 0;
    -webkit-transform: scale(3);
            transform: scale(3); }
  100% {
    opacity: 1;
    -webkit-transform: scale(1);
            transform: scale(1); } }








            .zoom-container {
    position: relative;
    overflow: hidden;
    width: 300px; /* Set the desired width */
    height: 200px; /* Set the desired height */
}

.zoom-image {
    width: 100%;
    height: auto;
    transition: transform 0.3s ease;
    transform-origin: 0 0; /* Set the transform origin to the top-left corner */
}




</style>




<script>

document.addEventListener('DOMContentLoaded', function () {
    const zoomImages = document.querySelectorAll('.zoom-image');

    zoomImages.forEach((image) => {
        image.addEventListener('mousemove', (e) => {
            const { left, top, width, height } = image.getBoundingClientRect();
            const x = e.clientX - left;
            const y = e.clientY - top;
            const offsetX = (x / width - 0.5) * 2;
            const offsetY = (y / height - 0.5) * 2;
            const scale = 5; // Adjust the scale factor as needed
            const transformValue = `scale(${scale}) translate(${offsetX * 50}%, ${offsetY * 50}%)`;

            image.style.transform = transformValue;
        });

        image.addEventListener('mouseleave', () => {
            image.style.transform = 'scale(1) translate(0%, 0%)';
        });
    });



 
    // const productId = document.querySelector('[name="productId"]').value;

    // // Fetch reviews from the server
    // fetch(`/getReviews/${productId}`)
    //     .then(response => response.json())
    //     .then(data => {
    //         // Update the reviews list on the page
    //         const reviewsList = document.getElementById('reviews-list');
    //         data.reviews.forEach(review => {
    //             const listItem = document.createElement('li');
    //             listItem.innerHTML = `<strong>${review.username}</strong> - Rating: ${review.rating}/5<br>${review.review}`;
    //             reviewsList.appendChild(listItem);
    //         });
    //     })
    //     .catch(error => console.error('Error fetching reviews:', error));



    // const reviews = products.reviews;
    // console.log('reviews',reviews)
    // // Select the reviews list container on the page
    // const reviewsList = document.getElementById('reviews-list');

    // // Check if there are reviews available
    // if (reviews && reviews.length > 0) {
    //     // Iterate over each review and append it to the reviews list
    //     reviews.forEach((review, index) => {
    //         const listItem = document.createElement('li');
    //         listItem.textContent = `Review ${index + 1}: ${review}`;
    //         reviewsList.appendChild(listItem);
    //     });
    // } else {
    //     // Display a message if there are no reviews
    //     const noReviewsMessage = document.createElement('p');
    //     noReviewsMessage.textContent = 'No reviews available for this product.';
    //     reviewsList.appendChild(noReviewsMessage);
    // }
});





// rating and review  --------------

// async function submitReview() {
//     const form = document.getElementById('reviewForm');
//     const formData = new FormData(form);
//  console.log('data',formData)
//     try {
//           fetch('/addReview', {
//             method: 'POST',
//             body: formData,
//         })
//         .then(response => response.json())
//         .then((data)=>{
//           console.log('data',data)
//         })
//         console.log('response',response)

//         if (response.ok) {
//     const data = await response.json();
  
      
//         location.reload(); 
    
//         } else {
//             // Handle errors
//             const data = await response.json();
//             console.error('Error:', data.error);
//         }


//     axios.post('/addReview', formData)
//       .then(response => {
//         // Handle the response data here
//         console.log(response.data);
//       })
//       .catch(error => {
//         // Handle errors here
//         console.error('Error:', error);
//       });
//     } catch (error) {
//         console.error('Network error:', error.message);
//     }
// }


</script>




<style>

.star {
  direction: rtl !important;
  position: relative;
  right: 13vw;
  margin-right: 5px;
}

.rating {
    display: inline-flex; /* Change to flex */
    margin-top: 10px;
}

.rating input {
    display: none;
}

.rating label {
    font-size: 30px;
    cursor: pointer;
}

.rating label:before {
    content: "\2605";
    color: #ddd;
    flex-direction: row-reverse; /* Change to row-reverse */
}

.rating input:checked ~ label:before {
    color: #f90;
}

label[for="review"],
textarea {
    display: block;
    margin-top: 10px;
}


.review-form {
    display: flex;
    flex-direction: column;
}

.submit-button {
    background-color: green;
    color: white;
    border: none;
    padding: 10px;
    cursor: pointer;
    margin-top: 10px;
    margin-bottom: 10px;
}

.submit-button:hover {
    background-color: darkgreen;
}




</style>







<%- include('footer') -%>