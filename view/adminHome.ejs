

 
<%- include('header') -%>

<div class="full bg-image" style="background-image: url(https://png.pngtree.com/background/20210710/original/pngtree-fast-food-light-yellow-hamburger-coke-chips-hot-coffee-tomato-sauce-picture-image_981064.jpg); background-size: cover; background-repeat: no-repeat; overflow-y: auto;">
  <!--navbar-->
  <nav class="navbar navbar-expand-lg navbar-light container-fluid border-bottom border-warning border-2  shadow position-fixed fixed-top"style="background-color:#FFF0D4;">
    <div class="container fluid">
      <img src="" />
      <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
        <span class="navbar-toggler-icon"></span>
      </button>
      <div class="collapse navbar-collapse" id="navbarSupportedContent">
        <ul class="navbar-nav me-auto mb-2 mb-lg-0">
          <li class="nav-item">
            <a class="nav-link active navbar-text text-black" aria-current="page" href="#">Home</a>
          </li>
          <li class="nav-item">
            <a class="nav-link navbar-text text-black" href="#">Blogs</a>
          </li>
          <li class="nav-item">
            <a class="nav-link navbar-text text-black" href="#">Reviews</a>
          </li>
          <li class="nav-item">
            <a class="nav-link navbar-text text-black" href="/adminlogout">Log Out</a>
          </li>
          <li class="nav-item dropdown">
            <a class="nav-link dropdown-toggle navbar-text text-white" href="#" id="navbarDropdown" role="button" data-bs-toggle="dropdown" aria-expanded="false">Contact</a>
            <ul class="dropdown-menu navbar-text text-black" aria-labelledby="navbarDropdown">
              <li><a class="dropdown-item" href="#">Mobile</a></li>
              <li><a class="dropdown-item" href="#">965847123</a></li>
              <li><hr class="dropdown-divider" /></li>
              <li><a class="dropdown-item" href="#">Email</a></li>
              <li><a class="dropdown-item" href="#">tastytreasure@gmail.com</a></li>
            </ul>
          </li>
        </ul>

        <form class="d-flex">
          <input class="form-control me-2 outline-warnin" type="search" placeholder="Search" aria-label="Search" />
          <button class="btn btn-outline-warning" type="submit">Search</button>
        </form>
      </div>
    </div>
  </nav>
  <!--navbar-->



<!-- Sidebar -->
     
      
<div class="sidebar ">
  <h2><i class="fa fa-user-circle border-bottom border-black"></i> ADMIN</h2>

  
    <a href="/adminhome"><i class="fa fa-fw fa-home"></i> Home</a>
    <a href="/addproducts"><i class="fa fa-fw fa-shopping-cart"></i> Add products</a>
    <a href="/adminUserDetails"><i class="fa fa-fw fa-user"></i> Users</a>
    <a href="/adminvieworder"><i class="fa fa-fw fa-user"></i> Orders</a>
    <a href="/viewproducts"><i class="fa fa-fw fa-shopping-cart"></i> Products</a>
    <a href="/banner"><i class="fa fa-fw fa-tag"></i> Add Banner</a>
    <a href="/reports"><i class="fa fa-fw fa-bar-chart"></i> Reports</a>
    <a href="#contact" onclick="showCategoryInput()"><i class="fa fa-fw fa-folder"></i>Add Category</a>
    <a href="#contact" onclick="showCouponInput()"><i class="fa fa-fw fa-ticket "></i>Add Coupon</a>
    <a href="#contact" onclick="showOfferInput()"><i class="fa fa-fw fa-ticket "></i>Add Offers</a>

   
</div>


   
      


<div class="container">
  <div class="row ">
    <div class="col-md-3 fonts" style="width: 40rem; height: 10rem; position: absolute;left:15%;top: 13%; ">
      <div class="card p-3 mb-2 border-bottom border-1 border-warning shadow shadow-6 " style="background-color: transparent;">
          <div class="d-flex justify-content-between " >
              <div class="d-flex flex-row align-items-center">
                  <div class="ms-2 c-details border-bottom border-1 border-dark">
                    <canvas id="myChart" width="600" height="550" style="max-width: 100%;"></canvas>
                  </div>
                  </div>
              </div>
         
    </div>
  </div>
</div>



<div class="container">
  <div class="row ">
    <div class="col-md-3 fonts" style="width: 30rem; height: 3rem; position: absolute;left:60%;top: 13%; ">
      <div class="card p-3 mb-2 border-bottom border-1 border-warning shadow shadow-6 " style="background-color: #FFF0D4;">
        <div class="d-flex justify-content-between " >
          <div class="d-flex flex-row align-items-center">
            <div class="ms-2 c-details border-bottom border-1 border-dark">
              <canvas id="lastWeekChart" width="600" height="350" style="max-width: 100%;"></canvas>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>

<div class="container">
  <div class="row ">
    <div class="col-md-3 fonts" style="width: 30rem; height: 3rem; position: absolute;left:60%;top: 50%; ">
      <div class="card p-3 mb-2 border-bottom border-1 border-warning shadow shadow-6 " style="background-color: #FFF0D4;">
        <div class="d-flex justify-content-between " >
          <div class="d-flex flex-row align-items-center">
            <div class="ms-2 c-details border-bottom border-1 border-dark">
              <canvas id="productChart" width="600" height="400" style="max-width: 100%;"></canvas>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>







<!-- <div class="row">
  <div class="col-md-3 fonts">
    <div class="card p-3 mb-2 border-bottom border-1 border-warning shadow shadow-6 " style="background-color:#FFF0D4; position: absolute;left: 60%;top: 12%;">
        <div class="d-flex justify-content-between">
            <div class="d-flex flex-row align-items-center">
                <div class="icon"> <i class="bx bxl-mailchimp"></i> </div>
                <div class="ms-2 c-details border-bottom border-1 border-dark">
                    <h6 class="mb-0">Orders</h6> <span class="formatted-date"></span>
                </div>
            </div>
        </div>
        <div class="mt-5 " style="height: 20vh;">
            <h3 class="heading fonts" id="totalOrdersValue">Total Orders :  <%= totalOrders %></h3>
            <div class="mt-5">
                <h3 class="heading" id="totalAmountValue">Total Amount : â‚¹<%= totalAmount %> /-</h3>
        </div>
    </div>
</div>
</div>


</div> -->


<!-- <div class="col-md-3 fonts">
  <div class="card p-3 mb-2 border-bottom border-1 border-warning shadow shadow-6 " style="background-color:#FFF0D4; position: absolute; left: 60%;top: 50%; height: 20vh;">
    
          <div class="d-flex flex-row align-items-center">
              <div class="icon"> <i class="bx bxl-mailchimp"></i> </div>
              <div class="ms-2 c-details border-bottom border-1 border-dark">
                  <h6 class="mb-0">Products</h6> <span class="formatted-date"></span>
              </div>
          </div>
    
      <div class="mt-5 " style="height: 20vh;">
          <h3 class="heading fonts">Total Products :  <%= totalProducts %></h3>
    
  </div>
</div> -->
 



<script>


function showCategoryInput() {
  Swal.fire({
    title: 'Add Category',
    input: 'text',
    inputLabel: 'Enter category',
    showCancelButton: true,
    confirmButtonText: 'Add',
    cancelButtonText: 'Cancel',
    preConfirm: (categoryName) => {
      
      return fetch('/savecategory', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({ category: categoryName }),
      })
      console.log('category response',response)
      .then(response => {
        if (!response.ok) {
          throw new Error('Failed to save category');
        }
        return response.json();
      })
      .then(data => {
       
        console.log('Server Response:', data);
        return categoryName; 
      })
      .catch(error => {
        console.error('Error:', error.message);
        Swal.showValidationMessage('Failed to save category');
      });
    }
  }).then((result) => {
    if (result.isConfirmed) {
      const categoryName = result.value;
      console.log('Category Added:', categoryName);
    }
  });
}






const currentDate = new Date();

const options = { year: 'numeric', month: 'long', day: 'numeric' };
const formattedDate = currentDate.toLocaleDateString('en-US', options);
const dateContainers = document.querySelectorAll('.formatted-date');
dateContainers.forEach(container => {
    container.textContent = formattedDate;
});




    




document.addEventListener('DOMContentLoaded', async function () {

  try {
    const generalChartDataResponse = await fetch('/getChartData');
    const generalChartData = await generalChartDataResponse.json();

    const lastWeekChartDataResponse = await fetch('/getLastWeekChart');
    const lastWeekChartData = await lastWeekChartDataResponse.json();

    const productChartDataResponse = await fetch('/getproductchart');
    const productChartData = await productChartDataResponse.json();
    console.log('pdata', productChartData);

    const generalDates = generalChartData.map(entry => {
      const timestamp = new Date(entry.year, entry.month - 1);
      return timestamp.toLocaleDateString('en-US', { month: 'long', year: 'numeric' });
    });

    const generalOrderCounts = generalChartData.map(entry => entry.orderCount);

    const lastWeekLabels = lastWeekChartData.map(entry => {
      const timestamp = new Date(entry.label);
      return timestamp.toLocaleDateString('en-US', { weekday: 'long' });
    });

    const lastWeekData = lastWeekChartData.map(entry => entry.value);

    const generalCtx = document.getElementById('myChart').getContext('2d');
    new Chart(generalCtx, {
      type: 'line',
      data: {
        labels: generalDates,
        datasets: [{
          label: 'Number of Orders',
          data: generalOrderCounts,
          backgroundColor: 'black',
          borderColor: 'rgba(200, 192, 192, 10)',
          borderWidth: 2
        }]
      },
      options: {
        scales: {
          y: {
            beginAtZero: true
          }
        }
      }
    });

    const lastWeekCtx = document.getElementById('lastWeekChart').getContext('2d');
    new Chart(lastWeekCtx, {
      type: 'bar',
      data: {
        labels: lastWeekLabels,
        datasets: [{
          label: 'Order Summary',
          data: lastWeekData,
          backgroundColor: 'black',
          borderColor: 'rgba(200, 192, 192, 10)',
          borderWidth: 2
        }]
      },
      options: {
        scales: {
          y: {
            beginAtZero: true
          }
        }
      }
    });

    // Product Chart
    const categories = productChartData.map(data => data._id);
    const counts = productChartData.map(data => data.totalCount);

    console.log('caaat', categories, 'counts', counts);

    const productChartCtx = document.getElementById('productChart').getContext('2d');
    new Chart(productChartCtx, {
    type: 'pie',
    data: {
    labels: categories,
      datasets: [{
      label: 'Product Quantity by Category',
      data: counts,
      backgroundColor: getRandomColors(categories.length), 
      borderColor: 'white',
      borderWidth: 2,
    }],
  },
  options: {
    responsive: true,
    maintainAspectRatio: false,
  },
});

  } catch (error) {
    console.error('Error fetching data:', error.message);
  }
});



function getRandomColors(count) {
  const colors = [];
  for (let i = 0; i < count; i++) {
    const randomColor = `#${Math.floor(Math.random()*16777215).toString(16)}`;
    colors.push(randomColor);
  }
  return colors;
}





function showCouponInput() {
  Swal.fire({
    title: 'Add Coupon',
    html:
      '<input id="couponCode" class="swal2-input" placeholder="Coupon Code">' +
      '<input id="expiryDate" class="swal2-input" type="date" placeholder="Expiry Date">' +
      '<input id="discountPrice" class="swal2-input" type="number" placeholder="Discount Price">'+
      '<input id="minprice" class="swal2-input" type="number" placeholder="Minimum Price">',
    showCancelButton: true,
    confirmButtonText: 'Add',
    cancelButtonText: 'Cancel',
    preConfirm: () => {
      const couponCode = document.getElementById('couponCode').value;
      const expiryDate = document.getElementById('expiryDate').value;
      const discountPrice = document.getElementById('discountPrice').value;
      const minimumprice = document.getElementById('minprice').value
      return fetch('/savecoupon', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({ code: couponCode, date: expiryDate, discount: discountPrice, minimumprice: minimumprice }),
      })
        .then(response => {
          if (!response.ok) {
            throw new Error('Failed to save coupon');
          }
          return response.json();
        })
        .then(data => {
          console.log('Server Response:', data);
          return { couponCode, expiryDate, discountPrice, minimumprice };
        })
        .catch(error => {
          console.error('Error:', error.message);
          Swal.showValidationMessage('Failed to save coupon');
        });
    },
  }).then((result) => {
    if (result.isConfirmed) {
      const { couponCode, expiryDate, discountPrice, minimumprice } = result.value;
      console.log('Coupon Added:', couponCode, expiryDate, discountPrice);
    }
  });
}



// offer input-----------------
function showOfferInput() {
  Swal.fire({
    title: 'Add Offers',
    html:
      '<label for="category">Select Category:</label>' +
      '<select id="category" class="swal2-input">' +
      '<option value="veg">Veg</option>' +
      '<option value="Non-veg">Non-Veg</option>' +
      '<option value="dishes">Dishes</option>' +
      '</select>' +
      '<label for="percentageOffer">Enter Percentage Offer:</label>' +
      '<input type="number" id="percentageOffer" class="swal2-input" placeholder="Percentage Offer">',
    showCancelButton: true,
    confirmButtonText: 'Add',
    cancelButtonText: 'Cancel',
    preConfirm: async () => {
      // Debugging: Log the selected category
      const selectedCategory = document.getElementById('category');
      console.log('Selected Category Element:', selectedCategory);
      const category = selectedCategory.value;
      
      // Debugging: Log the selected percentage offer
      const percentageOffer = document.getElementById('percentageOffer').value;
      console.log('Selected Category:', category);
      console.log('Percentage Offer:', percentageOffer);

      try {
        const response = await fetch('/updateOfferPrice', {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json',
            },
            body: JSON.stringify({ category, percentageOffer }),
          });

          // Check if the fetch request was successful
          if (response.ok) {
            const result = await response.json();
            console.log(result.message);
            // Display a success message using Swal or perform other actions
            Swal.fire('Success', 'Offer added successfully!', 'success');
          } else {
            console.error('Failed to update prices');
            // Handle the case when the update fails
            Swal.fire('Error', 'Failed to add offer', 'error');
          }
      } catch (error) {
        console.error('Error:', error);
        Swal.fire('Error', 'An error occurred', 'error');
      }
    },
  });
}

</script>

<%- include('footer') -%>












  
























      














    